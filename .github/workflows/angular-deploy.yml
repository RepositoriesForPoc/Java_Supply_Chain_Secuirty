
name: CI & CD for Angular

# on:
#   push:
#     branches: [ "master" ]
on: 
  workflow_dispatch


jobs:
  build:
  
    runs-on: self-hosted

    env:
      IMAGE_TAG: ${{ github.sha }}
                
      ECS_SERVICE: Angular_Service_Astha               
      ECS_CLUSTER: GHActionCluster                
      ECS_TASK_DEFINITION: task-definition-frontend.json                                        
      CONTAINER_NAME: Angular_Container

    steps:
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
                  
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1  
      
    - uses: actions/checkout@v3
      with:      
           token: ${{ secrets.GH_PAT_GA }}
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      with:
          path: ~/.npm
          key: Angular-Cache-self-hosted
          restore-keys: Angular-Cache-self-hosted
           
                 
    - name: Use Node.js       
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
     
    - run: |
            cd angular 
            npm install
            npm run build
            
    - name: Build and Push Docker Image 
      env:
       REGISTRY: ${{ steps.login-ecr.outputs.registry }}  
      run: | 
             cd angular
             docker build -t $REGISTRY/${{ secrets.FRONTEND_REPOSITORY }}:$IMAGE_TAG .
             docker push $REGISTRY/${{ secrets.FRONTEND_REPOSITORY }}:$IMAGE_TAG
         
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: '543816070942.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.FRONTEND_REPOSITORY }}:${{ env.IMAGE_TAG }}'
          format: template
          template: "@/contrib/html.tpl"
          output: trivy-report.html
          
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
          name: github-pages
          path: trivy-report.html
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
      with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: 543816070942.dkr.ecr.us-east-1.amazonaws.com/asthagithubactions_frontend:${{ env.IMAGE_TAG }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          #task-definition: ${{ env.ECS_TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true   

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
   
       channel-id: 'C05SNREQT40'
       slack-message: "GitHub build result: ${{ job.status }}"
      env:
       SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
            
